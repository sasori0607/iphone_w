/* .addClass('border') */
$('.color .img:eq(0)').addClass('bord')
$('.color .img img:eq(0)').addClass('border')
let some = $('.color .url ').attr('value')
console.log(some)
$('.main_img img').attr('src', some)
imgVal()

function imgVal() {
    let strVal =  $('.color').find('.val:first').val()
    $('.tovar_detail .main_img input').val(strVal)
}

Price()
full_price()
basket_counter()

/* Обновления количства товаров в корзине */

function basket_counter() {
    console.log('123e')
    let data = {}
    let csrf_token = $('.basket [name="csrfmiddlewaretoken"]').val()
    data["csrfmiddlewaretoken"] = csrf_token

    $.ajax({
        url: `/shop/basket_counter`,
        type: 'POST',
        data: data,
        cache: true,
        success: function (data) {
            console.log(data)
            if(data.sum >0){
                $('.basket_icon').css({'display':'block'})
                $('.basket_icon .basket_icon_p').html(data.sum)
            }

        },
        error: function(){
            console.log("error")
        }
     })

}

/////Обработка отнимания товара + вызов доп ф-й/////
$('.you_basket .main .content .minus').click(function(){
   let mains = $(this).parent()
   console.log(mains)
   let category =  mains.find('.category').val()
   console.log(category)
   let slug =  mains.find('.slug').val()
   console.log(slug)
   let color =  mains.find('.color').val()
   console.log(color)
   let TwoSimTrue =  mains.find('.TwoSimTrue').val()
   console.log(TwoSimTrue)
   let MemoryVolume = mains.find('.MemoryVolume').val()
   console.log(MemoryVolume)
   let ipadVersion = mains.find('.IpadVersion').val()
   console.log(ipadVersion)
   let ram = mains.find('.ram').val()
   console.log(ram)
   let size_corps = mains.find('.size_corps').val()
   console.log(size_corps)
   let version = mains.find('.version').val()
   console.log(version)
   let belt = mains.find('.belt').val()
   console.log(belt)
   let coverings = mains.find('.coverings').val()
   console.log(coverings)
   let connector = mains.find('.connector').val()
   console.log(connector)
   let charging = mains.find('.charging').val()
   console.log(coverings)






   let data = {}
   let csrf_token = $('.basket [name="csrfmiddlewaretoken"]').val()
   data["size_corps"] = size_corps
   data["version"] = version
   data["belt"] = belt

   data["csrfmiddlewaretoken"] = csrf_token
   data["category"] = category
   data["slug"] = slug
   data["color"] = color
   data["sim"] = TwoSimTrue
   data["memory"] = MemoryVolume
   data["ipadVersion"] = ipadVersion
   data["ram"] = ram
   data["coverings"] = coverings
   data["charging"] = charging
   data["connector"] = connector
   let varik = $(this)

   $.ajax({
        url: `/shop/basket_minus`,
        type: 'POST',
        data: data,
        cache: true,
        success: function (data) {
            if (data.key == 1){
                console.log("OK")
                basket_counter()
                varik.parent(".quantity").find('.number p').html(data.quantity_new)
                full_price()
                console.log($(this))
            }else{
                console.log("OK")
                location.reload()
                basket_counter()
              
            }


        },
        error: function(){
            //console.log(url)
            console.log("error")
        }
})
})




/////Обработка добавления товара + вызов доп ф-й/////
$('.you_basket .main .content .plus').click(function(){
   let mains = $(this).parent()
   console.log(mains)
   let category =  mains.find('.category').val()
   console.log(category)
   let slug =  mains.find('.slug').val()
   console.log(slug)
   let color =  mains.find('.color').val()
   console.log(color)
   let TwoSimTrue =  mains.find('.TwoSimTrue').val()
   console.log(TwoSimTrue)
   let MemoryVolume =  mains.find('.MemoryVolume').val()
   console.log(MemoryVolume)
   let ipadVersion = mains.find('.IpadVersion').val()
   console.log(ipadVersion)
   let ram = mains.find('.ram').val()
   console.log(ram)

   let size_corps = mains.find('.size_corps').val()
   console.log(size_corps)
   let version = mains.find('.version').val()
   console.log(version)
   let belt = mains.find('.belt').val()
   console.log(belt)

   let coverings = mains.find('.coverings').val()
   console.log(coverings)
   let connector = mains.find('.connector').val()
   console.log(connector)
   let charging = mains.find('.charging').val()
   console.log(coverings)

   

   let data = {}
   let csrf_token = $('.basket [name="csrfmiddlewaretoken"]').val()
   data["csrfmiddlewaretoken"] = csrf_token
   data["category"] = category
   data["slug"] = slug
   data["color"] = color
   data["sim"] = TwoSimTrue
   data["memory"] = MemoryVolume
   data["ipadVersion"] = ipadVersion
   data["ram"] = ram
   data["size_corps"] = size_corps
   data["version"] = version
   data["belt"] = belt
   data["coverings"] = coverings
   data["charging"] = charging
   data["connector"] = connector
   let varik = $(this)

   $.ajax({
        url: `/shop/basket_plus`,
        type: 'POST',
        data: data,
        cache: true,
        success: function (data) {

            console.log("OK")
            basket_counter()
            varik.parent(".quantity").find('.number p').html(data.quantity_new)
            full_price()
            console.log($(this))
            

        },
        error: function(){
            //console.log(url)
            console.log("error")
        }
})

})










/*Сумма покупки в корзине*/


function full_price() {
    let full_price = 0
    $('.main').each(function( index ) {
        let price = $(this).find('.price').val()
        let quantity = $(this).find('.number p').html()
        full_price += Number(price) * Number(quantity)
})
    $('.full_price .number').html(full_price + '  грн')
}












/* цена */
function Price() {
    let data = {}
    let guarantee =  $('.guarantee button[disabled] input').val()
    console.log(guarantee)
    let sim =  $('.sim button[disabled] p').html()
    console.log(sim)
    let memory =  $('.memory button[disabled] p').html()
    console.log(memory)
    let color = $('.color .bord .name').val()
    console.log(color)
    let slug = $('.main_img img').attr('alt')
    console.log(slug)
    let processor =  $('.processor button[disabled] p').html()
    console.log(processor)
    let category =  $('.title input').val()
    console.log(category)
    let ipadVersion =  $('.version button[disabled] p').html()
    console.log(ipadVersion)
    let size =  $('.size button[disabled] p').html()
    console.log(size)
    let version_watch =  $('.version_watch button[disabled] p').html()
    console.log(version_watch)
    let belt =  $('.belt button[disabled] p').html()
    console.log(belt)
    let ram =  $('.ram button[disabled] p').html()
    console.log(ram)

    let coverings =  $('.coverings button[disabled] p').html()
    console.log(coverings)
    let charging =  $('.charging button[disabled] p').html()
    console.log(charging)
    let connector =  $('.connector button[disabled] p').html()
    console.log(connector)

    /*let ram =  $('.ram button[disabled] p').html()
    console.log(ram)*/






    
    let csrf_token = $('.basket [name="csrfmiddlewaretoken"]').val()

    data["csrfmiddlewaretoken"] = csrf_token
    data["guarantee"] = guarantee
    data["sim"] = sim
    data["processor"] = processor
    if (typeof sim === "undefined"){
        data["sim"] = '1 Sim'
    }
    data["coverings"] = coverings
    data["charging"] = charging
    data["connector"] = connector
    data["ram"] = ram
    data["memory"] = memory
    data["color"] = color
    data["slug"] = slug
    data["category"] = category
    data["ipadVersion"] = ipadVersion
    data["size"] = size
    data["version_watch"] = version_watch
    data["belt"] = belt

    $.ajax({
        url: `/shop/price`,
        type: 'POST',
        data: data,
        cache: true,
        success: function (data) {
            console.log('OKs')
            $('.price h4').html(data.price + ' ₴')
            $('.tovar_detail .main_img img').attr('src', data.url_img)
            basket_counter()

        },
        error: function(){
            console.log("error")
        }
     })

}


function Basket() {
    let csrf_token = $('.basket [name="csrfmiddlewaretoken"]').val()

}


/* добавления в корзину */
function BasketAdd() {
    let guarantee =  $('.guarantee button[disabled] input').val()
    console.log(guarantee)
    let sim =  $('.sim button[disabled] p').html()
    console.log(sim)
    let memory =  $('.memory button[disabled] p').html()
    console.log(memory)
    let color = $('.color .bord .name').val()
    console.log(color)
    let slug = $('.main_img img').attr('alt')
    console.log(slug)
    let processor =  $('.processor button[disabled] p').html()
    console.log(processor)
    let category =  $('.title input').val()
    console.log(category)
    let ipadVersion =  $('.version button[disabled] p').html()
    console.log(ipadVersion)
    let size =  $('.size button[disabled] p').html()
    console.log(size)
    let version_watch =  $('.version_watch button[disabled] p').html()
    console.log(version_watch)
    let belt =  $('.belt button[disabled] p').html()
    console.log(belt)
    let title =  $('.tovar_detail  .title h2').html()
    console.log(title)
    let img =  $('.tovar_detail  .main_img img').attr('src')
    console.log(img)
    let ram =  $('.ram button[disabled] p').html()
    console.log(ram)

    let coverings =  $('.coverings button[disabled] p').html()
    console.log(coverings)
    let charging =  $('.charging button[disabled] p').html()
    console.log(charging)
    let connector =  $('.connector button[disabled] p').html()
    console.log(connector)




    let data = {}
    let csrf_token = $('.basket [name="csrfmiddlewaretoken"]').val()
    data['ram'] = ram
    data['title'] = title
    data['img'] = img
    data["csrfmiddlewaretoken"] = csrf_token
    data["guarantee"] = guarantee
    data["sim"] = sim
    data["processor"] = processor
    if (typeof sim === "undefined"){
        data["sim"] = '1 Sim'
    }

    data["memory"] = memory
    data["color"] = color
    data["slug"] = slug
    data["category"] = category
    data["ipadVersion"] = ipadVersion
    data["size"] = size
    data["version_watch"] = version_watch
    data["belt"] = belt
    data["coverings"] = coverings
    data["charging"] = charging
    data["connector"] = connector

    $.ajax({
        url: `/shop/basket`,
        type: 'POST',
        data: data,
        cache: true,
        success: function (data) {
            console.log('OKs')
            basket_counter()

            Basket()

        },
        error: function(){
            console.log("error")
        }
     })

}

$('.buy').click(function(){
    BasketAdd()
})

$('.full_price .knopka').click(function(){
    $('.body_form_basket').css({'left':'0px'})
})

$('.form_basket .closer').click(function(){
    $('.body_form_basket').css({'left':'-100%'})
})








$('.img_menu').click(function(){
    $('.nav .menu').css({'left':'0px'})
})

$('.clos').click(function(){
    $('.nav .menu').css({'left':'-100%'})
})

$('.background').click(function(){
    $('.nav .menu').css({'left':'-100%'})
})

$('.color').click(function(){

    $('.color .img').each(function() {
        $(this).removeClass('bord')
    })
    $(this).find('.img').addClass('bord')
    $('.color img').each(function() {
        $(this).removeClass('border')
    })
    $(this).find('img').addClass('border')



    let str = $(this).find('.url').val()
    console.log(str)
    let strVal =  $(this).find('.val').val()
    console.log(strVal)
    $('.tovar_detail .main_img img').attr('src', str)
    $('.tovar_detail .main_img input').val(strVal)
    Price()

})


$('.guarantee button').click(function(){
    $('.guarantee button').attr('disabled', false)
    $(this).attr('disabled', true)
    Price()
})

$('.sim button').click(function(){
    $('.sim button').attr('disabled', false)
    $(this).attr('disabled', true)
    Price()
})

$('.memory button').click(function(){
    $('.memory button').attr('disabled', false)
    $(this).attr('disabled', true)
    Price()
})

$('.version button').click(function(){
    $('.version button').attr('disabled', false)
    $(this).attr('disabled', true)
    Price()
})

$('.processor button').click(function(){
    $('.processor button').attr('disabled', false)
    $(this).attr('disabled', true)
    Price()
})

$('.size button').click(function(){
    $('.size button').attr('disabled', false)
    $(this).attr('disabled', true)
    Price()
})

$('.version_watch button').click(function(){
    $('.version_watch button').attr('disabled', false)
    $(this).attr('disabled', true)
    Price()
})

$('.belt button').click(function(){
    $('.belt button').attr('disabled', false)
    $(this).attr('disabled', true)
    Price()
})

$('.ram button').click(function(){
    $('.ram button').attr('disabled', false)
    $(this).attr('disabled', true)
    Price()
})

$('.connector button').click(function(){
    $('.connector button').attr('disabled', false)
    $(this).attr('disabled', true)
    Price()
})

$('.charging button').click(function(){
    $('.charging button').attr('disabled', false)
    $(this).attr('disabled', true)
    Price()
})

$('.coverings button').click(function(){
    $('.coverings button').attr('disabled', false)
    $(this).attr('disabled', true)
    Price()
})



// Отправка формы заказа //

$('.form_basket .btt').click(function(e){
    e.preventDefault()
    let form_name = $('.form_basket #form_name').val()
    console.log(form_name)
    let form_phone = $('.form_basket #form_phone').val()
    console.log(form_phone)
    let form_description = $('.form_basket #form_description').val()
    console.log(form_description)
    let form_town = $('.form_basket #form_town').val()
    console.log(form_town)
    let form_branches = $('.form_basket #form_branches').val()
    console.log(form_branches)


    let data = {}
    let csrf_token = $('.basket [name="csrfmiddlewaretoken"]').val()
    data["csrfmiddlewaretoken"] = csrf_token
    data['form_name'] = form_name
    data['form_phone'] = form_phone
    data['form_description'] = form_description
    data['form_town'] = form_town
    data['form_branches'] = form_branches


    $.ajax({
        url: `/shop/order`,
        type: 'POST',
        data: data,
        cache: true,
        success: function (data) {
            console.log('OKs')
            
            
            document.location.href = '/'
    

        },
        error: function(){
            console.log("error")
        }
     })







})


















////Подключка АПИ новой почты/////
$(function(){
  let form = $('.npc .input')
  form.keyup(function(e){
    let some = form.attr('value')

    data = `<?xml version="1.0" encoding="UTF-8"?>
    <file>
    <apiKey>978da96a7ed06df0dc3ddfec6ce50695</apiKey>
    <modelName>Address</modelName>
    <calledMethod>searchSettlements</calledMethod>
    <methodProperties>
    <CityName>${some}</CityName>
    <Limit>15</Limit>
    </methodProperties>
    </file>`
    $.ajax({
      url: `https://api.novaposhta.ua/v2.0/xml/`,
      type: 'POST',
      data: data,
      cache: true,
      success: function (data) {
            console.log("OK")
            let possibly = ''
            $.each($(data).find('Addresses item'),function(){
              let city = $(this).find('Present').html()
              let ref = $(this).find('MainDescription').html()
              possibly += ` <div class="list-group-item list-group-item-town">
              <input type="hidden" value="${ref}">
              <p>${city}</p>
              </div> `
            })
            console.log("error")
            $('.list-group-search-town').html(possibly)
      },
      error: function(){
          console.log("error")
      }


    })
    
  })
})



//Появления/убирание поиска города в форме новой почты ///
$(document).ready(function() {
  $( ".npc" ).hover(
    function() {
      let width = $('#form_town').width() 
      $('.list-group-search-town').css({'display' : 'block'})
      $('.list-group-search-town').css({'width' : width})


    }, function() {
      $('.list-group-search-town').css({'display' : 'none'})
    }
  )
})


//Обработка клика в поиске города)
$(document).ready(function() {

  $(".list-group-item-town").live('click',function() {
    $('.npc .inputH').val($(this).find('input').val())
    $('.npc .input').val($(this).find('p').html())
    $('.list-group-search-town').html('')

  })
})



////Подключка АПИ новой почты + поиск отделения /////
$(function(){
  let form = $('.branches input')
  form.keyup(function(e){
    let some = form.attr('value')
    let cityRef = $('.npc .inputH').val()
    let cityName = $('.npc .input').val()
    data = `<?xml version="1.0" encoding="UTF-8" ?>
    <root>
      <modelName>AddressGeneral</modelName>
      <calledMethod>getWarehouses</calledMethod>
      <methodProperties>
        <Limit>15</Limit>
        <CityName>${cityRef}</CityName>
        <Language>ru</Language>
      </methodProperties>
      <apiKey>978da96a7ed06df0dc3ddfec6ce50695</apiKey>
    </root>`

    $.ajax({
      url: `https://api.novaposhta.ua/v2.0/xml/`,
      type: 'POST',
      data: data,
      cache: true,
      success: function (data) {
            console.log("OK")
            let possibly = ''
            $.each($(data).find('Description'),function(){
              let str = $(this).html()
              if (str.indexOf(some) != -1){
                possibly += ` <div class="list-group-item list-group-item-description">
                <p>${str}</p>
                </div> `
              }
            $('.list-group-search-description').html(possibly)
            })
            
      },
      error: function(){
          console.log("error")
      }


    })
    
  })
})


//Появления/убирание поиска отделения в форме новой почты ///
$(document).ready(function() {
  $( ".branches" ).hover(
    function() {
      let width = $('#form_branches').width() 
      $('.list-group-search-description').css({'display' : 'block'})
      $('.list-group-search-description').css({'width' : width})
    }, function() {
      $('.list-group-search-description').css({'display' : 'none'})
    }
  )
})


//Обработка клика в поиске отделения)
$(document).ready(function() {

  $(".list-group-item-description").live('click',function() {
    //$('.npc .inputH').val($(this).find('input').val())
    $('.branches input').val($(this).find('p').html())
    $('.list-group-search-description').html('')

  })
})
























$('.responsive').slick({
  dots: true,
  infinite: true,
  speed: 300,
  slidesToShow: 1,
  centerMode: true,
  variableWidth: true,
  autoplay: true,
  autoplaySpeed: 2000,
});

$('.responsive_2').slick({

  dots: true,
  infinite: true,
  speed: 500,
  fade: true,
  cssEase: 'linear'

});




AOS.init();
// You can also pass an optional settings object
// below listed default settings
AOS.init({
  // Global settings:
 // disable: tablet, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function
  startEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on
  initClassName: 'aos-init', // class applied after initialization
  animatedClassName: 'aos-animate', // class applied on animation
  useClassNames: false, // if true, will add content of `data-aos` as classes on scroll
  disableMutationObserver: false, // disables automatic mutations' detections (advanced)
  debounceDelay: 50, // the delay on debounce used while resizing window (advanced)
  throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)


  // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:
  offset: 270, // offset (in px) from the original trigger point
  delay: 0, // values from 0 to 3000, with step 50ms
  duration: 1200, // values from 0 to 3000, with step 50ms
  easing: 'ease', // default easing for AOS animations
  once: false, // whether animation should happen only once - while scrolling down
  mirror: false, // whether elements should animate out while scrolling past them
  anchorPlacement: 'top-bottom', // defines which position of the element regarding to window should trigger the animation

});

